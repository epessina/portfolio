{"version":3,"sources":["webpack://src/index.scss","webpack://src/App.module.scss","webpack://src/components/Navigation/Navbar/Navbar.module.scss","webpack://src/styles/_utils.scss","webpack://node_modules/include-media/dist/_include-media.scss","webpack://src/components/Navigation/_commons.scss","webpack://src/styles/_variables.scss","webpack://src/pages/Landing/Landing.module.scss","webpack://src/components/Hero/Hero.module.scss","webpack://src/components/Navigation/MobileMenu/MobileMenu.module.scss","webpack://src/components/Navigation/MenuIcon/MenuIcon.module.scss"],"names":[],"mappings":"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","file":"main.0c9039d3.chunk.css","sourcesContent":["* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n}\n\nhtml {\n  position: relative;\n  font-size: 100%;\n}\n\nbody {\n  font-family: 'Montserrat', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  overflow-x: hidden;\n  line-height: 1.5;\n  color: #1c1d25;\n}\n\na {\n  color: black;\n  text-decoration: none;\n}\n",".content {\n  width: 100%;\n  min-height: 100%;\n}\n","@import \"../../../../node_modules/include-media/dist/include-media\";\n@import \"styles/variables\";\n@import \"styles/utils\";\n@import \"../commons\";\n\n.nav {\n  @extend %base-nav;\n  background: transparent;\n\n  &.in_scroll {\n    background: $bg-dark;\n  }\n\n  @include media(\"<=sm\") {\n    display: none;\n  }\n}\n\n.content {\n  @extend %content-size;\n  height: 100%;\n  margin: auto;\n  display: grid;\n  grid-template-columns: min-content 1fr min-content;\n  align-items: center;\n  color: white;\n}\n\n.logo {\n  @extend %base-nav-logo;\n  height: $nav_logo-size;\n  width: $nav_logo-size;\n}\n\n.nav_items {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-top: 5px;\n\n  .nav_item {\n    cursor: pointer;\n    margin-left: 50px;\n    position: relative;\n    color: $color-tertiary;\n    font-size: 16px;\n    font-weight: bold;\n    transition: color .35s ease;\n    text-transform: uppercase;\n\n    &:after {\n      $size: 10px;\n      content: '';\n      width: $size;\n      height: $size;\n      background: $color-primary;\n      display: inline-block;\n      position: absolute;\n      bottom: -13px;\n      left: 50%;\n      margin-left: -$size/2;\n      border-radius: 50%;\n      transform: scale(0);\n      transition: transform 0.3s cubic-bezier(0.61, 0, 0.405, 1.63);\n    }\n\n    &.active,\n    &:hover {\n      color: white;\n\n      &:after {\n        transform: scale(1);\n      }\n    }\n  }\n}\n\n.nav_icons {\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: min-content min-content;\n  grid-column-gap: 16px;\n\n  .nav_icon {\n    color: $color-tertiary;\n    height: 40px;\n    width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: color .35s ease;\n\n    svg {\n      height: 32px;\n      width: 32px;\n      transition: height,width .35s ease;\n    }\n\n    &:hover {\n      color: $color-primary;\n\n      svg {\n        height: 36px;\n        width: 36px;\n      }\n    }\n  }\n}\n","@import \"../../node_modules/include-media/dist/include-media\";\n\n%content-size {\n  width: 1000px;\n\n  @include media(\">=xl\") {\n    width: 1170px;\n  }\n\n  @include media(\"<=1024px\") {\n    width: 95%;\n  }\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@import \"styles/variables\";\n\n%base-nav {\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 100;\n}\n\n%base-nav-logo {\n  padding: $nav_logo-padding-top-bottom 0;\n  cursor: pointer;\n  opacity: 1;\n  transition: opacity .35s ease;\n\n  &:hover {\n    opacity: 0.8;\n  }\n}\n","$breakpoints: (\n  sm: 640px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px\n);\n\n$color-primary: #FDF3B5;\n$color-tertiary: #b0b2c3;\n$bg-dark: #1D1F21;\n\n$content-padding: 200px;\n$content-padding-sm: 100px;\n\n$nav_logo-size: 54px;\n$nav_logo-size_sm: 45px;\n$nav_logo-padding-top-bottom: 10px;\n","@import \"styles/variables\";\n\n.header {\n  width: 100%;\n  height: 100vh;\n  min-height: 380px;\n  display: block;\n  position: relative;\n  z-index: 2;\n  background: $bg-dark;\n  overflow: hidden;\n  transition: all .3s ease;\n}\n\n.bg_container {\n  width: 100%;\n  height: 100vh;\n\n  .bg_shapes {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    li {\n      position: absolute;\n      display: block;\n      list-style: none;\n      width: 20px;\n      height: 20px;\n      background: rgba(255, 255, 255, 0.1);\n      animation: animate 25s linear infinite;\n      bottom: -50px;\n      border-radius: 20%;\n\n      &:nth-child(1){\n        left: 25%;\n        width: 80px;\n        height: 80px;\n        animation-delay: 0s;\n      }\n\n      &:nth-child(2){\n        left: 10%;\n        width: 20px;\n        height: 20px;\n        animation-delay: 2s;\n        animation-duration: 12s;\n      }\n\n      &:nth-child(3){\n        left: 70%;\n        width: 20px;\n        height: 20px;\n        animation-delay: 4s;\n      }\n\n      &:nth-child(4){\n        left: 40%;\n        width: 60px;\n        height: 60px;\n        animation-delay: 0s;\n        animation-duration: 18s;\n      }\n\n      &:nth-child(5){\n        left: 65%;\n        width: 20px;\n        height: 20px;\n        animation-delay: 0s;\n      }\n\n      &:nth-child(6){\n        left: 75%;\n        width: 110px;\n        height: 110px;\n        animation-delay: 3s;\n      }\n\n      &:nth-child(7){\n        left: 35%;\n        width: 150px;\n        height: 150px;\n        animation-delay: 7s;\n      }\n\n      &:nth-child(8){\n        left: 50%;\n        width: 25px;\n        height: 25px;\n        animation-delay: 15s;\n        animation-duration: 45s;\n      }\n\n      &:nth-child(9){\n        left: 20%;\n        width: 15px;\n        height: 15px;\n        animation-delay: 2s;\n        animation-duration: 35s;\n      }\n\n      &:nth-child(10){\n        left: 85%;\n        width: 150px;\n        height: 150px;\n        animation-delay: 0s;\n        animation-duration: 11s;\n      }\n    }\n  }\n}\n\n.arrow {\n  position: absolute;\n  bottom: 5px;\n  left: 50%;\n  color: white;\n  cursor: pointer;\n  animation: bounce 2s infinite;\n\n  &:hover {\n    color: $color-primary;\n    animation: none;\n  }\n}\n\n@keyframes animate {\n  0%{\n    transform: translateY(0) rotate(0deg);\n    opacity: 0.8;\n  }\n\n  100%{\n    transform: translateY(-100vh) rotate(720deg);\n    opacity: 0.4;\n  }\n}\n\n@keyframes bounce {\n  0%, 20%, 50%, 80%, 100% {\n    -moz-transform: translateY(0);\n    -ms-transform: translateY(0);\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n  40% {\n    -moz-transform: translateY(-30px);\n    -ms-transform: translateY(-30px);\n    -webkit-transform: translateY(-30px);\n    transform: translateY(-30px);\n  }\n  60% {\n    -moz-transform: translateY(-15px);\n    -ms-transform: translateY(-15px);\n    -webkit-transform: translateY(-15px);\n    transform: translateY(-15px);\n  }\n}\n","@import \"styles/variables\";\n@import \"styles/utils\";\n\n.container {\n  width: 100%;\n  position: absolute;\n  top: 40%;\n  left: 0;\n  color: white;\n}\n\n.content {\n  @extend %content-size;\n  margin: 0 auto;\n}\n\n.presentation_container {\n  display: grid;\n  grid-template-rows: min-content min-content;\n  justify-items: center;\n\n  .text_primary {\n    color: white;\n    font-weight: bold;\n    font-size: 64px;\n    text-align: center;\n\n    .name {\n      color: $color-primary;\n      text-transform: uppercase;\n    }\n  }\n\n  .occupation {\n    font-size: 20px;\n    letter-spacing: 28px;\n    color: $color-tertiary;\n    text-transform: uppercase;\n    text-align: center;\n    margin-left: 25px;\n  }\n\n  @include media(\"<=1024px\") {\n    .text_primary {\n      font-size: 48px;\n    }\n\n    .occupation {\n      font-size: 16px;\n      letter-spacing: 20px;\n      margin-left: 20px;\n    }\n  }\n\n  @include media(\"<=sm\") {\n    .text_primary {\n      font-size: 32px;\n    }\n\n    .occupation {\n      font-size: 14px;\n      letter-spacing: 11px;\n      margin-left: 11px;\n    }\n  }\n}\n","@import \"../../../../node_modules/include-media/dist/include-media\";\n@import \"styles/variables\";\n@import \"../commons\";\n\n$elements-transition: opacity 0.3s ease, transform 0.4s cubic-bezier(0.694, 0.048, 0.335, 1);\n$open-transition-delay: 0.2s;\n$close-transition-delay: 0.1s;\n\n.nav {\n  @extend %base-nav;\n  overflow: hidden;\n  height: $nav_logo-size_sm + ($nav_logo-padding-top-bottom * 2);\n  background: linear-gradient(180deg, $bg-dark 0%, $bg-dark 100%);\n  transition: all 0.5s ease-out;\n  transition-delay: $close-transition-delay;\n\n  @include media(\">sm\") {\n    display: none;\n  }\n}\n\n.top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 2.5%;\n\n  & .logo {\n    @extend %base-nav-logo;\n    height: $nav_logo-size_sm;\n    width: $nav_logo-size_sm;\n    margin-left: 15px;\n  }\n}\n\n.nav_items {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: absolute;\n  top: 50%;\n  left: 15%;\n  width: 70%;\n  transition: $elements-transition;\n  transition-delay: 0s;\n  opacity: 0;\n  transform: translateY(-70%);\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n\n  .nav_item {\n    color: white;\n    cursor: pointer;\n    font-size: 27px;\n    padding: 12px 25px;\n    font-weight: bold;\n\n    &:after {\n      $size: 15px;\n      content: '';\n      width: $size;\n      height: $size;\n      background: $color-primary;\n      position: absolute;\n      margin: calc(27px/2) 0 0 20px;\n      border-radius: 50%;\n      display: none;\n    }\n\n    &.active {\n      &:after {\n        display: inline-block;\n      }\n    }\n  }\n}\n\n.nav_icons {\n  width: 100%;\n  position: absolute;\n  bottom: 50px;\n  left: 0;\n  display: grid;\n  grid-template-columns: min-content min-content;\n  grid-column-gap: 64px;\n  justify-content: center;\n  transition: $elements-transition;\n  transition-delay: 0s;\n  opacity: 0;\n  transform: translateY(15px);\n\n  .nav_icon {\n    color: white;\n    height: 40px;\n    width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n      height: 32px;\n      width: 32px;\n    }\n  }\n}\n\n.nav.opened {\n  height: 100%;\n  transition: all 0.3s ease-in;\n  transition-delay: 0s;\n  background: linear-gradient(180deg, $bg-dark 0%, rgba(106,103,88,1) 100%);\n\n  .nav_items {\n    opacity: 1;\n    transform: translateY(-60%);\n    transition-delay: $open-transition-delay;\n  }\n\n  .nav_icons {\n    opacity: 1;\n    transform: translateY(0);\n    transition-delay: $open-transition-delay;\n  }\n}\n","@import \"../../../../node_modules/include-media/dist/include-media\";\n@import \"styles/variables\";\n\n.container {\n  height: $nav_logo-size_sm + ($nav_logo-padding-top-bottom * 2);\n  width: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: visible;\n  cursor: pointer;\n  transition-timing-function: linear;\n  transition-duration: .15s;\n  transition-property: opacity,filter;\n  text-align: center;\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n  z-index: 2;\n\n  .box {\n    display: inline-block;\n    position: relative;\n    width: 40px;\n    height: 24px;\n\n    .inner, .inner:before, .inner:after {\n      position: absolute;\n      width: 40px;\n      height: 4px;\n      background-color: white;\n      border-radius: 4px;\n    }\n\n    .inner {\n      position: absolute;\n      width: 40px;\n      height: 4px;\n      transition-timing-function: ease;\n      transition-duration: .15s;\n      transition-property: transform;\n      background-color: white;\n      border-radius: 4px;\n      top: 50%;\n      display: block;\n      margin-top: -2px;\n\n      &:before, &:after {\n        transition: bottom .08s ease-out 0s, top .08s ease-out 0s, opacity 0s linear;\n        display: block;\n        content: \"\";\n      }\n\n      &:before {\n        top: -10px;\n      }\n\n      &:after {\n        bottom: -10px;\n      }\n    }\n  }\n\n  &.active {\n    .inner {\n      &:before, &:after {\n        transition: bottom .08s ease-out, top .08s ease-out, opacity 0s linear .08s;\n        display: block;\n        content: \"\";\n        opacity: 0;\n      }\n\n      &:before {\n        top: 0;\n      }\n\n      &:after {\n        bottom: 0;\n      }\n    }\n  }\n\n  @include media(\">sm\") {\n    display: none;\n  }\n}\n"]}